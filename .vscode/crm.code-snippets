{
  // Place your crm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  // "reactComponentCss": {
  //   "prefix": "rfc",
  //   "scope": "javascript,javascriptreact",
  //   "body": [
  //     "import css from './${TM_FILENAME_BASE}.module.css'",
  //     "",
  //     "function ${1:${TM_FILENAME_BASE}}() {",
  //     "\treturn (",
  //     "\t\t<div>",
  //     "\t\t\t$0",
  //     "\t\t</div>",
  //     "\t)",
  //     "}",
  //     "",
  //     "export default ${1:${TM_FILENAME_BASE}}",
  //     "",
  //   ],
  //   "description": "React component for css modules",
  // },

  // "reactComponent": {
  //   "prefix": "rfc",
  //   "scope": "javascript,javascriptreact",
  //   "body": [
  //     "function ${1:${TM_FILENAME_BASE}}() {",
  //     "\treturn (",
  //     "\t\t<div>",
  //     "\t\t\t$0",
  //     "\t\t</div>",
  //     "\t)",
  //     "}",
  //     "",
  //     "export default ${1:${TM_FILENAME_BASE}}",
  //     "",
  //   ],
  //   "description": "React component for css modules",
  // },

  // "reactComponentTypescript": {
  //   "prefix": "rfc",
  //   "scope": "typescript,typescriptreact",
  //   "body": [
  //     "interface ${TM_FILENAME_BASE}Props {",
  //     "\t$1",
  //     "}",
  //     "",
  //     "function ${TM_FILENAME_BASE}({ $2 }: ${TM_FILENAME_BASE}Props) {",
  //     "\t$3",
  //     "\treturn (",
  //     "\t\t<div>",
  //     "\t\t\t",
  //     "\t\t</div>",
  //     "\t)",
  //     "}",
  //     "",
  //     "export default ${TM_FILENAME_BASE}",
  //     "",
  //   ],
  //   "description": "React component",
  // },

  "reactComponentTypescriptCss": {
    "prefix": "rfc",
    "scope": "typescript,typescriptreact",
    "body": [
      "import css from './${TM_FILENAME_BASE}.module.css'",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "\t$1",
      "}",
      "",
      "function ${TM_FILENAME_BASE}({ $2 }: ${TM_FILENAME_BASE}Props) {",
      "\t$3",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}",
      "",
    ],
    "description": "React component",
  },

  "reactComponentTypescriptCssChildren": {
  "prefix": "rfcc",
  "scope": "typescript,typescriptreact",
  "body": [
    "import type { ReactNode } from 'react'",
    "import css from './${TM_FILENAME_BASE}.module.css'",
    "",
    "interface ${TM_FILENAME_BASE}Props {",
    "\t$1",
    "\tchildren?: ReactNode;",
    "}",
    "",
    "function ${TM_FILENAME_BASE}({ $2, children }: ${TM_FILENAME_BASE}Props) {",
    "\t$3",
    "\treturn (",
    "\t\t<div>",
    "\t\t\t{children}",
    "\t\t\t$0",
    "\t\t</div>",
    "\t)",
    "}",
    "",
    "export default ${TM_FILENAME_BASE}",
    ""
  ],
  "description": "React component"
}

}
